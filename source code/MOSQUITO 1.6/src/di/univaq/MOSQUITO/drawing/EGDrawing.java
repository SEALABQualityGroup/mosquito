package di.univaq.MOSQUITO.drawing;

import java.io.File;
import java.io.IOException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerConfigurationException;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import javax.xml.transform.stream.StreamSource;

import org.w3c.dom.Document;
import org.xml.sax.SAXException;

public class EGDrawing 
{
    // Global value so it can be ref'd by the tree-adapter
    static Document document;

    public EGDrawing()
    {
        DocumentBuilderFactory factory =
            DocumentBuilderFactory.newInstance();
 
        try {
        	
        	File stylesheet = new File("XSL\\ExecutionGraph.xsl");
            File datafile   = new File("C:\\windows\\temp\\EGoutput.xml");
            DocumentBuilder builder = factory.newDocumentBuilder();
            document = builder.parse(datafile);
 
            // Use a Transformer for output
            TransformerFactory tFactory = TransformerFactory.newInstance();
            StreamSource stylesource = new StreamSource(stylesheet);
            Transformer transformer = tFactory.newTransformer(stylesource);
           
            DOMSource source = new DOMSource(document);
            //StreamResult result = new StreamResult(System.out);
            StreamResult result = new StreamResult("C:\\windows\\temp\\EGout.svg");
            transformer.transform(source, result);
           
        } catch (TransformerConfigurationException tce) {
           // Error generated by the parser
           System.out.println ("\n** Transformer Factory error");
           System.out.println("   " + tce.getMessage() );

           // Use the contained exception, if any
           Throwable x = tce;
           if (tce.getException() != null)
               x = tce.getException();
           x.printStackTrace();
      
        } catch (TransformerException te) {
           // Error generated by the parser
           System.out.println ("\n** Transformation error");
           System.out.println("   " + te.getMessage() );

           // Use the contained exception, if any
           Throwable x = te;
           if (te.getException() != null)
               x = te.getException();
           x.printStackTrace();
           
         } catch (SAXException sxe) {
           // Error generated by this application
           // (or a parser-initialization error)
           
             Exception  x = sxe;
           if (sxe.getException() != null)
               x = sxe.getException();
           x.printStackTrace();

        } catch (ParserConfigurationException pce) {
            // Parser with specified options can't be built
            pce.printStackTrace();

        } catch (IOException ioe) {
           // I/O error
         
           ioe.printStackTrace();
        }
       try{
           Runtime.getRuntime().exec("\"C:\\Programmi\\Internet Explorer\\iexplore.exe\" \"C:\\windows\\temp\\EGout.svg\"");
       }
       catch(Exception e){
    	  
    	   System.out.println( e.getMessage());
       }
    }
} 
